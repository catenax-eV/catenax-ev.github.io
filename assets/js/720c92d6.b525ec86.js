"use strict";(self.webpackChunkcatenax_ev_github_io_new=self.webpackChunkcatenax_ev_github_io_new||[]).push([[29364],{20456:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"standards/CX-0002-DigitalTwinsInCatenaX/CX-0002-DigitalTwinsInCatenaX","title":"CX-0002 Digital Twins in Catena-X v2.2.0","description":"ABSTRACT","source":"@site/docs/standards/CX-0002-DigitalTwinsInCatenaX/CX-0002-DigitalTwinsInCatenaX.md","sourceDirName":"standards/CX-0002-DigitalTwinsInCatenaX","slug":"/standards/CX-0002-DigitalTwinsInCatenaX/","permalink":"/docs/next/standards/CX-0002-DigitalTwinsInCatenaX/","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"CAT/Enablement Service Provider","permalink":"/docs/next/tags/cat-enablement-service-provider"},{"inline":true,"label":"CAT/Digital Twin Registry aaS","permalink":"/docs/next/tags/cat-digital-twin-registry-aa-s"},{"inline":true,"label":"CAT/Digital Twin Registry","permalink":"/docs/next/tags/cat-digital-twin-registry"},{"inline":true,"label":"CAT/Semantic","permalink":"/docs/next/tags/cat-semantic"},{"inline":true,"label":"CAT/Digital Twin","permalink":"/docs/next/tags/cat-digital-twin"}],"version":"current","frontMatter":{"tags":["CAT/Enablement Service Provider","CAT/Digital Twin Registry aaS","CAT/Digital Twin Registry","CAT/Semantic","CAT/Digital Twin"]},"sidebar":"sidebar_standards","previous":{"title":"CX-0001 EDC Discovery API v1.0.4","permalink":"/docs/next/standards/CX-0001-EDCDiscoveryAPI/"},"next":{"title":"CX-0003 SAMM Aspect Meta Model v1.2.0","permalink":"/docs/next/standards/CX-0003-SAMMSemanticAspectMetaModel/"}}');var s=n(74848),a=n(28453);const r={tags:["CAT/Enablement Service Provider","CAT/Digital Twin Registry aaS","CAT/Digital Twin Registry","CAT/Semantic","CAT/Digital Twin"]},o="CX-0002 Digital Twins in Catena-X v2.2.0",l={},d=[{value:"ABSTRACT",id:"abstract",level:2},{value:"FOR WHOM IS THE STANDARD DESIGNED",id:"for-whom-is-the-standard-designed",level:2},{value:"COMPARISON WITH THE PREVIOUS VERSION OF THE STANDARD",id:"comparison-with-the-previous-version-of-the-standard",level:2},{value:"1 INTRODUCTION",id:"1-introduction",level:2},{value:"1.1 AUDIENCE &amp; SCOPE",id:"11-audience--scope",level:3},{value:"1.2 CONTEXT AND ARCHITECTURE FIT",id:"12-context-and-architecture-fit",level:3},{value:"1.2.1 Digital Twins in Catena-X",id:"121-digital-twins-in-catena-x",level:4},{value:"1.2.2 Digital Twin Registry",id:"122-digital-twin-registry",level:4},{value:"1.2.3 Asset Administration Shell",id:"123-asset-administration-shell",level:4},{value:"1.2.4 Architecture Overview",id:"124-architecture-overview",level:4},{value:"1.3 CONFORMANCE",id:"13-conformance",level:3},{value:"1.4 PROOF OF CONFORMITY",id:"14-proof-of-conformity",level:3},{value:"1.4.1 Proof of Conformity for Digital Twin Registry Solutions",id:"141-proof-of-conformity-for-digital-twin-registry-solutions",level:4},{value:"1.4.2 Proof of Conformity for Data Providers",id:"142-proof-of-conformity-for-data-providers",level:4},{value:"1.4.3 Proof of Conformity for Data Consumers",id:"143-proof-of-conformity-for-data-consumers",level:4},{value:"1.5 Examples",id:"15-examples",level:3},{value:"1.6 Terminology",id:"16-terminology",level:3},{value:"Aspect",id:"aspect",level:4},{value:"Aspect Model",id:"aspect-model",level:4},{value:"Asset Administration Shell",id:"asset-administration-shell",level:4},{value:"Digital Twin",id:"digital-twin",level:4},{value:"Digital Representation",id:"digital-representation",level:4},{value:"Submodel",id:"submodel",level:4},{value:"Submodel Element",id:"submodel-element",level:4},{value:"2. Digital Twin Registry API for Solution Providers [NORMATIVE]",id:"2-digital-twin-registry-api-for-solution-providers-normative",level:2},{value:"2.1 API Specification",id:"21-api-specification",level:3},{value:"2.1.1 Standards and Profiles",id:"211-standards-and-profiles",level:4},{value:"2.1.2 API Endpoints &amp; resources",id:"212-api-endpoints--resources",level:4},{value:"2.1.3 Available Data Types",id:"213-available-data-types",level:4},{value:"2.1.4 Representation in DSP catalogs",id:"214-representation-in-dsp-catalogs",level:4},{value:"2.1.5 Error Handling",id:"215-error-handling",level:4},{value:"3. Digital Twin Registry API for Data Providers [NORMATIVE]",id:"3-digital-twin-registry-api-for-data-providers-normative",level:2},{value:"3.1 API Specification",id:"31-api-specification",level:3},{value:"3.1.1 Standards and Profiles",id:"311-standards-and-profiles",level:4},{value:"3.1.2 API Endpoints &amp; resources",id:"312-api-endpoints--resources",level:4},{value:"3.1.3 Available Data Types",id:"313-available-data-types",level:4},{value:"3.1.4 Representation in DSP catalogs",id:"314-representation-in-dsp-catalogs",level:4},{value:"3.1.5 Error Handling",id:"315-error-handling",level:4},{value:"4. Submodel API for Data Providers [NORMATIVE]",id:"4-submodel-api-for-data-providers-normative",level:2},{value:"4.1 API Specification",id:"41-api-specification",level:3},{value:"4.1.1 Standards and Profiles",id:"411-standards-and-profiles",level:4},{value:"4.1.2 API Endpoints &amp; resources",id:"412-api-endpoints--resources",level:4},{value:"4.1.3 Available Data Types",id:"413-available-data-types",level:4},{value:"4.1.4 Representation in DSP catalogs",id:"414-representation-in-dsp-catalogs",level:4},{value:"4.1.5 Error Handling",id:"415-error-handling",level:4},{value:"5. Submodel API for Data Consumers [NORMATIVE]",id:"5-submodel-api-for-data-consumers-normative",level:2},{value:"6. References",id:"6-references",level:2},{value:"6.1 Normative References",id:"61-normative-references",level:3},{value:"6.2 Non-Normative References",id:"62-non-normative-references",level:3},{value:"6.3 Reference Implementations",id:"63-reference-implementations",level:3},{value:"ANNEXES",id:"annexes",level:2},{value:"FIGURES",id:"figures",level:3},{value:"TABLES",id:"tables",level:3},{value:"Legal",id:"legal",level:2}];function c(e){const i={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"cx-0002-digital-twins-in-catena-x-v220",children:"CX-0002 Digital Twins in Catena-X v2.2.0"})}),"\n",(0,s.jsx)(i.h2,{id:"abstract",children:"ABSTRACT"}),"\n",(0,s.jsx)(i.p,{children:"The Catena-X network is about accessing/sharing/providing/using data,\nformulated in the different use cases. This standardization\nscenario is about how the data, and the data models look like and how the modelling has to be done, so that data between\necosystem partners can be shared, lossless and in a machine-readable\nway. This document focuses on Digital Twins and their application and\nadministration within Catena-X."}),"\n",(0,s.jsx)(i.p,{children:"The purpose of this standard is to provide concepts and\nspecifications in order to allow proper data provisioning with\nDigital Twins in Catena-X."}),"\n",(0,s.jsx)(i.h2,{id:"for-whom-is-the-standard-designed",children:"FOR WHOM IS THE STANDARD DESIGNED"}),"\n",(0,s.jsx)(i.p,{children:"This standard is designed as an implementable specification and thus\nis relevant for all technical roles concerned with APIs and Data Exchange\nin the Catena-X network"}),"\n",(0,s.jsx)(i.h2,{id:"comparison-with-the-previous-version-of-the-standard",children:"COMPARISON WITH THE PREVIOUS VERSION OF THE STANDARD"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Remove all normative references to the EDC implementation"}),"\n",(0,s.jsxs)(i.li,{children:["Declare outdated typization mechanism (asset:prop",":type",") optional"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"1-introduction",children:"1 INTRODUCTION"}),"\n",(0,s.jsx)(i.h3,{id:"11-audience--scope",children:"1.1 AUDIENCE & SCOPE"}),"\n",(0,s.jsx)(i.p,{children:"This standard is relevant for"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"data provider / consumer"}),"\n",(0,s.jsx)(i.li,{children:"solution provider"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The standard is applicable in the following cases for the\nfollowing roles:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"all data providers who need to provide information via Digital Twins"}),"\n",(0,s.jsx)(i.li,{children:"all data consumers and business application provider who need access\nto data provided via Digital Twins"}),"\n",(0,s.jsx)(i.li,{children:"solution providers of a Digital Twin Registry"}),"\n",(0,s.jsx)(i.li,{children:"onboarding service providers who need to offer core service of a\nDigital Twin Registry to their customers"}),"\n",(0,s.jsx)(i.li,{children:"enabling service providers who need access to data provided via Digital Twins"}),"\n",(0,s.jsx)(i.li,{children:"consulting service providers who need to explain how Digital Twins are implemented and/or used"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"12-context-and-architecture-fit",children:"1.2 CONTEXT AND ARCHITECTURE FIT"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.em,{children:"This section is non-normative"})}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Catena-X creates a decentral, uniform, and consistent solution for data sharing\nin automotive industry. In this context, the\nexchange of data is an essential requirement for the\nsuccess of this network. For this purpose, Catena-X provides various\nmethods, tools, and standards to ensure semantic interoperability.\nDigital Twins have established themselves here as a central element for\nstructuring and accessing data. With the help of defined semantics, both\ndata provisioning and app development are simplified and encouraged."}),"\n",(0,s.jsx)(i.h4,{id:"121-digital-twins-in-catena-x",children:"1.2.1 Digital Twins in Catena-X"}),"\n",(0,s.jsx)(i.p,{children:"The term Digital Twin (DT) describes a digital representation of an asset sufficient\nto meet the requirements of a set of use cases."}),"\n",(0,s.jsx)(i.p,{children:"Any asset - it can be an actual physical asset like an engine hood\nbut also something virtual like a web service - has a digital\nrepresentation with consistent semantics. Hence, Digital Twins adhere to\nthe following characteristics:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"The DT has at least one Catena-X-wide unique identifier (ID)."}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"An asset can have more than one DT. However, each DTR may only contain a single DT for each asset."}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"DTs organize a set of Aspects. A DT's set of aspects can be extended over lifetime."}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"An Aspect of a DT includes both structural and behavioral\ndata and models, including operations and simulation models."}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"The semantics of an Aspect can be described via semantic models."}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"A single Aspect can be connected to different heterogeneous data\nsources, including behavioral models."}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:["The DT can represent type assets (",(0,s.jsx)(i.em,{children:"e.g."}),", virtual prototype of a car)\nand instance assets (",(0,s.jsx)(i.em,{children:"e.g."}),", real car)."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:["A DT can cover the whole asset lifecycle including, ",(0,s.jsx)(i.em,{children:"e.g."}),", the\nplanning, production, sales, use, and decommissioning phases.\nHowever, in practice there may be more than one twin with different\nIDs representing different lifecycle phases, ",(0,s.jsx)(i.em,{children:"e.g."}),", one twin for types\nand multiple twins for instances."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"The DT represents current available information about an asset,\nsynchronized at a specified frequency and fidelity, which can be\nleveraged for simulation and business process integration."}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:'By using Aspects, a DT can reference other DTs to express "part\nof" or "consists of" relations.'}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"In the context of Catena-X Digital Twins are exposed to the Catena-X Dataspace according to the\nDataspace Protocol (DSP)."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h4,{id:"122-digital-twin-registry",children:"1.2.2 Digital Twin Registry"}),"\n",(0,s.jsx)(i.p,{children:"A Digital Twin Registry (DTR) is an operated solution which lists Digital\nTwins and their respective Aspects. Each Digital Twin represents a single asset.\nSome basic information about the asset being represented is part of each entry in a DTR."}),"\n",(0,s.jsx)(i.p,{children:"For each asset, several data sets in form of Aspects can be provided.\nThese Aspects are referenced in each Digital Twin together with\ninformation about access to the Aspect endpoints."}),"\n",(0,s.jsx)(i.p,{children:"Moreover, a DTR also offers basic discovery functionality to find\nDigital Twin(s) representing an asset under consideration."}),"\n",(0,s.jsx)(i.p,{children:"In general, every data provider in the dataspace must decide how and where to operate a DTR."}),"\n",(0,s.jsx)(i.p,{children:'The data provider needs to register all their Digital Twins including its respective Aspects\nto its DTR service in order to reveal its "offer" of sharing respective\ndata sets.'}),"\n",(0,s.jsx)(i.p,{children:"The data offered by a Digital Twin via Aspects should be semantically described by a\nsemantic Aspect metamodel conformant to CX-0003."}),"\n",(0,s.jsx)(i.h4,{id:"123-asset-administration-shell",children:"1.2.3 Asset Administration Shell"}),"\n",(0,s.jsxs)(i.p,{children:['The Asset Administration Shell (AAS) is a key concept of Industry 4.0\n(or "Industrie 4.0" in German), maintained by the ',(0,s.jsx)(i.a,{href:"https://industrialdigitaltwin.org",children:"Industrial Digital Twin\nAssociation"})," (IDTA), and is used to describe an asset\nelectronically in a standardized manner. The AAS is a standardized way to implement a Digital Twin.\nOne of the main concepts of the AAS is the concept of Submodels, each of which can characterize the\nasset by describing its Aspects for different use cases and data consumers."]}),"\n",(0,s.jsx)(i.p,{children:"The specifications of the AAS offers a set of standardized API methods and resources to access data of a Digital Twin."}),"\n",(0,s.jsx)(i.p,{children:"Also, an Asset Administration Shell Registry service and other services in the context of Digital\nTwins are standardized."}),"\n",(0,s.jsx)(i.p,{children:"In Catena-X the semantics of a Submodel is described via an Aspect Model conformant to standard CX-0003,\npreferrable by using standardized properties conformant to standard CX-0044."}),"\n",(0,s.jsxs)(i.p,{children:["The following figure gives a high-level overview how the concepts relevant for this standard relate\nwith each other and concepts from neighboring domains.\n",(0,s.jsx)(i.img,{alt:"Terminology",src:n(3566).A+"",title:"Non-normative overview of relations between terms relevant\nin CX - 0002",width:"3950",height:"2154"})]}),"\n",(0,s.jsx)(i.p,{children:"In general, the AAS has proven to be suitable for the following missions:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"representing data exchanged in a standardized way between two parties (API payload)"}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"Providing uniform access to data exchanged between two parties (API operations)"}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"Data discovery for the asset under consideration for\nexchange between two parties in a standardized way (Digital Twin Registry)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.a,{href:"https://industrialdigitaltwin.org/wp-content/uploads/2022/12/2022-12-07_IDTA_AAS-Reading-Guide.pdf",children:"Asset Administration Shell Reading Guide"}),"\ngives an overview for different stakeholders.\nThis reading guide together with detailed technical documentation can be found in the Content Hub of the IDTA and on GitHub:\n",(0,s.jsx)(i.a,{href:"https://github.com/admin-shell-io/aas-specs",children:"https://github.com/admin-shell-io/aas-specs"}),"."]}),"\n",(0,s.jsx)(i.h4,{id:"124-architecture-overview",children:"1.2.4 Architecture Overview"}),"\n",(0,s.jsx)(i.p,{children:"The Digital Twin Registry (DTR) component is a decentral component in the Catena-X dataspace. Typically, each data provider offers its own DTR, either using an enablement service provider that also operates the DTR for the data provider or operating it themselves."}),"\n",(0,s.jsx)(i.p,{children:"The DTR does not only contain pure registration functionality but also basic\ndiscovery functionality based on asset identifiers. The corresponding APIs for this kind of discovery are\nspecified in this document."}),"\n",(0,s.jsx)(i.p,{children:"A DTR is accessed via a dataspace connector conformant to standard CX-0018. Business solutions first need to find the relevant connectors and thus negotiate with them for the relevant DTR. Additionally to EDC Discovery (see standard CX-0001), additional discovery services (see standard CX-0053) are provided to reduce the number of dataspace connectors that need to be accessed by the business application."}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"TwinArch",src:n(26965).A+"",title:"Pattern for decentralized Digital Twin Registry",width:"1290",height:"903"})}),"\n",(0,s.jsx)(i.h3,{id:"13-conformance",children:"1.3 CONFORMANCE"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.em,{children:"This section is non-normative"})}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"As well as sections marked as non-normative, all authoring guidelines,\ndiagrams, examples, and notes in this specification are non-normative.\nEverything else in this specification is normative."}),"\n",(0,s.jsxs)(i.p,{children:["The keywords MAY, MUST, MUST NOT, OPTIONAL, RECOMMENDED, REQUIRED,\nSHOULD and SHOULD NOT in this document are to be interpreted as described in [",(0,s.jsx)(i.a,{href:"https://datatracker.ietf.org/doc/html/bcp14",children:"BCP\n14"}),"], [",(0,s.jsx)(i.a,{href:"https://www.w3.org/TR/did-core/#bib-rfc2119",children:"RFC2119"}),"],\n[",(0,s.jsx)(i.a,{href:"https://www.w3.org/TR/did-core/#bib-rfc8174",children:"RFC8174"}),"] when, and\nonly when, they appear in all capitals, as shown here."]}),"\n",(0,s.jsx)(i.h3,{id:"14-proof-of-conformity",children:"1.4 PROOF OF CONFORMITY"}),"\n",(0,s.jsx)(i.p,{children:"All participants and their solutions will need to prove that they\nconform to the Catena-X standards. To validate that the standards are\napplied correctly, Catena-X employs Conformity Assessment Bodies (CABs)."}),"\n",(0,s.jsx)(i.h4,{id:"141-proof-of-conformity-for-digital-twin-registry-solutions",children:"1.4.1 Proof of Conformity for Digital Twin Registry Solutions"}),"\n",(0,s.jsx)(i.p,{children:"A Digital Twin Registry solution MUST provide http/REST APIs conformant\nto the openAPI specifications adopted in this document."}),"\n",(0,s.jsxs)(i.p,{children:["In case the Digital Twin Registry solution already has a valid certificate of the\n",(0,s.jsx)(i.a,{href:"https://industrialdigitaltwin.org",children:"Industrial Digital Twin Association"})," (IDTA) including the\nrequired service specification profiles the simplified certification process of Catena-X e.V. holds."]}),"\n",(0,s.jsx)(i.p,{children:"If there is no valid certificate available from the IDTA, Digital Twin Registry solution providers\nMUST prove their conformity by providing:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"An openAPI specification of the implemented endpoints."}),"\n",(0,s.jsx)(i.li,{children:"Documentation that the implementation's API responses match to the response structure of the required API specifications in this document."}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"A Digital Twin Registry Solution MUST include mechanisms that allow to ensure confidentiality and integrity of data, and compliance with antitrust laws."}),"\n",(0,s.jsx)(i.p,{children:"On default, the read access to Digital Twins SHOULD be enabled by Digital Twin Registry Solutions to data providers only."}),"\n",(0,s.jsx)(i.h4,{id:"142-proof-of-conformity-for-data-providers",children:"1.4.2 Proof of Conformity for Data Providers"}),"\n",(0,s.jsx)(i.p,{children:"A data provider MUST offer the http/REST APIs for its Digital Twin Registry service conformant to\nthis specification."}),"\n",(0,s.jsxs)(i.p,{children:["In case the Digital Twin Registry solution already has a valid certificate of the\n",(0,s.jsx)(i.a,{href:"https://industrialdigitaltwin.org",children:"Industrial Digital Twin Association"})," (IDTA) including the\nrequired service specification profiles the simplified certification process of Catena-X e.V. holds."]}),"\n",(0,s.jsx)(i.p,{children:"The Digital Twin Registry service used by the data provider MUST be registered in the dataspace connector selected\nby the data provider."}),"\n",(0,s.jsx)(i.p,{children:"A data provider MAY create and register Digital Twins using the\nhttp/REST APIs conformant to the openAPI specification as defined in\nthis document."}),"\n",(0,s.jsx)(i.p,{children:"The data provider MUST offer the READ operations for Digital Twins and its Aspects conformant to\nthis specification."}),"\n",(0,s.jsx)(i.p,{children:"The endpoints offered by the data provider MUST be made accessible to the dataspace\nas specified in this document or other use case related standards."}),"\n",(0,s.jsx)(i.p,{children:"Appropriate usage policies conformant to standard CX-0018 and subsequent use-case-standards MUST be defined for accessing the Digital Twin Registry itself as well as for the Submodels."}),"\n",(0,s.jsxs)(i.p,{children:["Data providers MUST comply with antitrust law, ",(0,s.jsx)(i.em,{children:"i.e."}),", competitively sensitive information (",(0,s.jsx)(i.em,{children:"e.g."})," customer names, supplier names, prices, price models, internal knowhow, sales and/or purchasing strategies) MUST NOT be published via a DTR."]}),"\n",(0,s.jsx)(i.p,{children:"The data provider SHOULD use the unique identifier of the standardized Aspect Model conformant to CX-0003 when registering a new Submodel endpoint to a DTR."}),"\n",(0,s.jsx)(i.p,{children:"A data provider SHOULD add specific asset IDs for each Digital Twin to enable discovery.\nOther CX-standards may make more specific demands for Data Providers which specific assetIDs are to be added."}),"\n",(0,s.jsx)(i.p,{children:"A data provider SHOULD add information to available discovery services conformant to standard CX-0001 and\nCX-0053 - if available - to enable data consumers to find the relevant DSP-endpoints and thus the Digital Twin Registry\nthe data consumer is interested in."}),"\n",(0,s.jsx)(i.h4,{id:"143-proof-of-conformity-for-data-consumers",children:"1.4.3 Proof of Conformity for Data Consumers"}),"\n",(0,s.jsx)(i.p,{children:"A data consumer, business application provider or enabling service\nprovider MAY lookup the endpoints of the Submodels relevant for the use\ncase using the http/REST APIs conformant to the openAPI specification as\ndefined in this document."}),"\n",(0,s.jsx)(i.p,{children:"Since there are several Digital Twin Registries in the dataspace data\nconsumers, business application providers or enabling service providers\nMAY first lookup the available Digital Twin Registry endpoints of the\nrelevant dataspace connectors using the corresponding standardized EDC discovery services (see standard CX-0001)."}),"\n",(0,s.jsxs)(i.p,{children:["Additionally, data consumers MAY use standardized discovery services -\nif available -, ",(0,s.jsx)(i.em,{children:"e.g."}),", to find a relevant dataspace connector for a specific company via its\nBPN (see standard CX-0053)."]}),"\n",(0,s.jsx)(i.h3,{id:"15-examples",children:"1.5 Examples"}),"\n",(0,s.jsxs)(i.p,{children:["Examples can be found in\n",(0,s.jsx)(i.a,{href:"https://github.com/eclipse-tractusx/sldt-digital-twin-registry/tree/main/docs",children:"the Tractus-X DTR's documentation"})," and the ",(0,s.jsx)(i.a,{href:"https://eclipse-tractusx.github.io/docs-kits/next/category/digital-twin-kit/",children:"Digital Twin Kit"})]}),"\n",(0,s.jsx)(i.h3,{id:"16-terminology",children:"1.6 Terminology"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.em,{children:"This section is non-normative"})}),"\n"]}),"\n",(0,s.jsx)(i.h4,{id:"aspect",children:"Aspect"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:["a domain-specific view on information and functionality associated with\na specific ",(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"#digital-twin",children:"Digital Twin"})})," with a reference to a concrete ",(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"#aspect-model",children:"Aspect Model"})}),"."]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Note 1 to entry: An Aspect is a software service to retrieve the actual\nruntime data of a Digital Twin (current or aggregated) from a data\nsource or to trigger operations. Thus, an Aspect is built with an\nimplementation that ensures that the exchanged data is compliant to the\nspecification of the referenced Aspect Model via a defined\ninterface."}),"\n",(0,s.jsx)(i.p,{children:'Note 2 to entry: Aspects are registered (incl. their "API endpoint"\ninformation) within the Digital Twin to which they belong in the\nDigital Twin Registry.'}),"\n",(0,s.jsxs)(i.p,{children:["Note 3 to entry: an Aspect corresponds to a ",(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"#submodel",children:"Submodel"})})," in the ",(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"#asset-administration-shell",children:"Asset Administration Shell"})})]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsxs)(i.em,{children:["[SOURCE: ",(0,s.jsx)(i.a,{href:"https://projects.eclipse.org/projects/dt.esmf",children:"Eclipse Semantic Modeling Framework (ESMF)"}),", editorial changes and notes\nadded]"]})}),"\n",(0,s.jsx)(i.h4,{id:"aspect-model",children:"Aspect Model"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:["a formal, machine-readable semantic description (expressed with\nRDF/turtle) of data accessible from an ",(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"#aspect",children:"Aspect"})}),"."]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["Note 1 to entry: An Aspect Model must adhere to the Semantic Aspect Meta\nModel (SAMM), ",(0,s.jsx)(i.em,{children:"i.e."}),", it utilizes elements and relations defined in the\nSAMM and is compliant with the validity rules\ndefined by the SAMM."]}),"\n",(0,s.jsx)(i.p,{children:"Note 2 to entry: Aspect Models are logical data models which can be used\nto detail a conceptual model in order to describe the semantics of\nruntime data related to a concept. Further, elements of an Aspect Model\ncan/should refer to terms of a standardized Business Glossary (if\nexisting)."}),"\n",(0,s.jsxs)(i.p,{children:["Note 3 to entry: An Aspect Model may describe the semantics of a ",(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"#submodel",children:"Submodel"})}),"."]}),"\n",(0,s.jsxs)(i.p,{children:["[SOURCE: ",(0,s.jsx)(i.a,{href:"https://projects.eclipse.org/projects/dt.esmf",children:"Eclipse Semantic Modeling Framework (ESMF)"}),", editorial changes and notes added]"]}),"\n",(0,s.jsx)(i.h4,{id:"asset-administration-shell",children:"Asset Administration Shell"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:["standardized ",(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"#digital-representation",children:"digital representation"})})," of an asset"]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Note 1 to entry: Asset Administration Shell and Administration Shell are\nused synonymously."}),"\n",(0,s.jsx)(i.p,{children:"[SOURCE: IEC 63278-1, note added]"}),"\n",(0,s.jsx)(i.h4,{id:"digital-twin",children:"Digital Twin"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"#digital-representation",children:"digital representation"})}),", sufficient to meet the requirements of a set of\nuse cases"]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Note 1 to entry: in this context, the entity in the definition of\ndigital representation is typically an asset."}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsxs)(i.em,{children:["[SOURCE: IIC Vocabulary IIC:IIVOC",":V2",".3:20201025, adapted (an asset,\nprocess, or system was changed to an asset)]"]})}),"\n",(0,s.jsx)(i.h4,{id:"digital-representation",children:"Digital Representation"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsx)(i.p,{children:"information and services representing an entity from a given"}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["EXAMPLE 1: examples of information are properties (",(0,s.jsx)(i.em,{children:"e.g."}),", maximum\ntemperature), actual parameters (",(0,s.jsx)(i.em,{children:"e.g."}),", actual velocity), events (",(0,s.jsx)(i.em,{children:"e.g."}),",\nnotification of status change), schematics (electrical), and\nvisualization information (2D and 3D drawings)."]}),"\n",(0,s.jsx)(i.p,{children:"EXAMPLE 2: examples of services are providing the history of the\nconfiguration data, providing the actual velocity, and providing a\nsimulation."}),"\n",(0,s.jsx)(i.p,{children:"EXAMPLE 3: examples of viewpoints are mechanical, electrical, or\ncommercial characteristics."}),"\n",(0,s.jsx)(i.p,{children:"[SOURCE: IEC 63278-1, editorial changes]"}),"\n",(0,s.jsx)(i.h4,{id:"submodel",children:"Submodel"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:["container of ",(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"#submodel-element",children:"SubmodelElements"})})," defining a hierarchical structure\nconsisting of SubmodelElements"]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"[SOURCE: IEC 63278-1]"}),"\n",(0,s.jsx)(i.h4,{id:"submodel-element",children:"Submodel Element"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:["elements in a ",(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"#submodel",children:"Submodel"})})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"[SOURCE: IEC 63278-1]"}),"\n",(0,s.jsx)(i.h2,{id:"2-digital-twin-registry-api-for-solution-providers-normative",children:"2. Digital Twin Registry API for Solution Providers [NORMATIVE]"}),"\n",(0,s.jsx)(i.h3,{id:"21-api-specification",children:"2.1 API Specification"}),"\n",(0,s.jsx)(i.h4,{id:"211-standards-and-profiles",children:"2.1.1 Standards and Profiles"}),"\n",(0,s.jsxs)(i.p,{children:["The specification\n",(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"#61-normative-references",children:"Specification of the Asset Administration Shell - Part 2: Application Programming Interfaces"})}),"\nis the basis for the Digital Twin Registry implementation in Catena-X.\nThe document can be found in the content hub of IDTA: ",(0,s.jsx)(i.a,{href:"https://industrialdigitaltwin.org/content-hub",children:"https://industrialdigitaltwin.org/content-hub"}),"."]}),"\n",(0,s.jsxs)(i.p,{children:["The API is offered as OpenAPI file in addition to its formal specification published on ",(0,s.jsx)(i.a,{href:"https://industrialdigitaltwin.org/",children:"https://industrialdigitaltwin.org/"}),"."]}),"\n",(0,s.jsxs)(i.p,{children:["For relevant profiles of the Service Specifications see chapters on ",(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"#212-api-endpoints--resources",children:"API endpoints & resources"})}),"."]}),"\n",(0,s.jsx)(i.h4,{id:"212-api-endpoints--resources",children:"2.1.2 API Endpoints & resources"}),"\n",(0,s.jsx)(i.p,{children:"The API MUST be implemented as specified for the profiles:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"https://app.swaggerhub.com/apis/Plattform_i40/AssetAdministrationShellRegistryServiceSpecification/V3.0_SSP-002",children:"Asset Administration Shell Registry Service Specification V3.0 READ Profile SSP-002"})})}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"https://app.swaggerhub.com/apis/Plattform_i40/DiscoveryServiceSpecification/V3.0_SSP-001",children:"Discovery Service Specification V3.0 Profile SSP-001"})})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The following profile SHOULD be implemented:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"https://app.swaggerhub.com/apis/Plattform_i40/AssetAdministrationShellRegistryServiceSpecification/V3.0_SSP-001",children:"Asset Administration Shell Registry Service Specification V3.0 Profile SSP-001"})})}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The following deviations are defined:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Length of ",(0,s.jsx)(i.em,{children:"ProtocolInformation/subprotocolBody"})," string MUST be 2048"]}),"\n",(0,s.jsx)(i.li,{children:"DELETE and POST operations of Discovery Interface are optional to be implemented"}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.em,{children:"GetAllAssetAdministrationShellIdsByAssetLink"})," (",(0,s.jsx)(i.code,{children:"GET /lookup/shells"}),") is deprecated and will be succeeded in future releases."]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["EXAMPLE for Self-Description (",(0,s.jsx)(i.strong,{children:"GetSelfDescription"}),") of a Digital Twin Registry solution :"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-json",children:'{\n  "profiles": [\n    "https://admin-shell.io/aas/API/3/0/DiscoveryServiceSpecification/SSP-001",\n    "https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRegistryServiceSpecification/SSP-002"\n   ]\n}\n'})}),"\n",(0,s.jsxs)(i.p,{children:["API paths SHOULD be versioned only holding the major version of the AAS specification, for instance ",(0,s.jsx)(i.code,{children:"/v3/"}),"."]}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:["Note: However, the version segment of the API-endpoint will usually be hidden by a Proxy (for example an EDC Data Plane) that\nobfuscates the base-URL while allowing restricted client-side navigation along the path-structure defined by the AAS\nspecification. For instance, a consumer can assume that (when accessing a DTR) adding the path-elements\n",(0,s.jsx)(i.code,{children:"/shell-descriptors/{{someAasId}}"})," will reliably yield a response containing an AAS-Descriptor."]}),"\n"]}),"\n",(0,s.jsx)(i.h4,{id:"213-available-data-types",children:"2.1.3 Available Data Types"}),"\n",(0,s.jsx)(i.p,{children:"The API MUST use JSON as the payload transported via HTTP."}),"\n",(0,s.jsxs)(i.p,{children:["For explanation of data types see ",(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"#61-normative-references",children:"Specification of the Asset Administration Shell - Part 2:\nApplication Programming Interfaces"})}),"."]}),"\n",(0,s.jsx)(i.h4,{id:"214-representation-in-dsp-catalogs",children:"2.1.4 Representation in DSP catalogs"}),"\n",(0,s.jsx)(i.p,{children:"Not applicable, since catalogs are created by data provider not by the DTR's solution provider."}),"\n",(0,s.jsx)(i.h4,{id:"215-error-handling",children:"2.1.5 Error Handling"}),"\n",(0,s.jsxs)(i.p,{children:["Error response ",(0,s.jsx)(i.strong,{children:"501 Not Implemented"})," MUST be used for operations or parameter values\nnot yet supported."]}),"\n",(0,s.jsxs)(i.p,{children:["For other error codes and error handling see ",(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"#61-normative-references",children:"Specification of the Asset Administration Shell -\nPart 2: Application Programming Interfaces"})}),"."]}),"\n",(0,s.jsx)(i.h2,{id:"3-digital-twin-registry-api-for-data-providers-normative",children:"3. Digital Twin Registry API for Data Providers [NORMATIVE]"}),"\n",(0,s.jsx)(i.h3,{id:"31-api-specification",children:"3.1 API Specification"}),"\n",(0,s.jsx)(i.h4,{id:"311-standards-and-profiles",children:"3.1.1 Standards and Profiles"}),"\n",(0,s.jsxs)(i.p,{children:["The specification of the ",(0,s.jsx)(i.a,{href:"#61-normative-references",children:"Asset Administration Shell - Part 2:\nApplication Programming Interfaces"})," is the basis for the Digital Twin Registry\nimplementation in Catena-X."]}),"\n",(0,s.jsxs)(i.p,{children:["The API is offered as OpenAPI file in addition to its formal specification published on ",(0,s.jsx)(i.a,{href:"https://industrialdigitaltwin.org/",children:"https://industrialdigitaltwin.org/"}),"."]}),"\n",(0,s.jsxs)(i.p,{children:["For relevant profiles of the Service Specifications see chapters on ",(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"#312-api-endpoints--resources",children:"API endpoints & resources"})}),"."]}),"\n",(0,s.jsx)(i.h4,{id:"312-api-endpoints--resources",children:"3.1.2 API Endpoints & resources"}),"\n",(0,s.jsx)(i.p,{children:"The API MUST be implemented as specified for the profiles:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://app.swaggerhub.com/apis/Plattform_i40/AssetAdministrationShellRegistryServiceSpecification/V3.0_SSP-002",children:"Asset Administration Shell Registry Service V3.0 READ Profile SSP-002"})}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://app.swaggerhub.com/apis/Plattform_i40/DiscoveryServiceSpecification/V3.0_SSP-001",children:"Discovery Service Specification V3.0 Profile SSP-001"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The WRITE operations of the following profile MAY be used to create and delete Digital Twins:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://app.swaggerhub.com/apis/Plattform_i40/AssetAdministrationShellRegistryServiceSpecification/V3.0_SSP-001",children:"Asset Administration Shell Registry Service Profile V3.0 Profile SSP-001"})}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The same deviations are defined as for Digital Twin solution providers."}),"\n",(0,s.jsxs)(i.p,{children:["API paths SHOULD be versioned only holding the major version of the AAS specification, for instance ",(0,s.jsx)(i.code,{children:"/v3/"}),"."]}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:["Note: However, the version segment of the API-endpoint will usually be hidden by a Proxy (for example an EDC Data Plane) that obfuscates the base-URL while allowing restricted client-side navigation along the path-structure defined by the AAS specification. For instance, a consumer can assume that (when accessing a DTR) adding the path-elements ",(0,s.jsx)(i.code,{children:"/shell-descriptors/{{someAasId}}"})," will reliably yield a response containing an AAS-Descriptor."]}),"\n"]}),"\n",(0,s.jsx)(i.h4,{id:"313-available-data-types",children:"3.1.3 Available Data Types"}),"\n",(0,s.jsx)(i.p,{children:"The API MUST use JSON as payload transported via HTTP."}),"\n",(0,s.jsxs)(i.p,{children:["For explanation of data types see ",(0,s.jsx)(i.a,{href:"https://industrialdigitaltwin.org/wp-content/uploads/2023/04/IDTA-01002-3-0_SpecificationAssetAdministrationShell_Part2_API.pdf",children:"Specification of the Asset Administration Shell - Part 2:\nApplication Programming Interfaces"}),"."]}),"\n",(0,s.jsx)(i.h4,{id:"314-representation-in-dsp-catalogs",children:"3.1.4 Representation in DSP catalogs"}),"\n",(0,s.jsxs)(i.p,{children:["A Digital Twin Registry that is made accessible via a DSP-compliant connector MUST expose the ",(0,s.jsx)(i.a,{href:"https://www.w3.org/TR/vocab-dcat-2/#Class:Dataset",children:(0,s.jsx)(i.code,{children:"dcat:Dataset"})})," representing the DTR to be registered with the following properties and restrictions on their values."]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:'"dct:type": {"@id":"https://w3id.org/catenax/taxonomy#DigitalTwinRegistry"}'}),'. The "dct" prefix MUST resolve to "',(0,s.jsx)(i.a,{href:"http://purl.org/dc/terms/",children:"http://purl.org/dc/terms/"}),'".']}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:'"cx-common:version"'}),'. The "cx-common" prefix MUST resolve to "',(0,s.jsx)(i.a,{href:"https://w3id.org/catenax/ontology/common#",children:"https://w3id.org/catenax/ontology/common#"}),'". The value MUST indicate the major and minor version of the implemented AAS-specification and must be at least ',(0,s.jsx)(i.code,{children:'"3.0"'}),". For more details on conventions in ",(0,s.jsx)(i.code,{children:"dcat:Catalogs"}),", see CX-0018."]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["For backward compatibility it MAY be necessary to still provide the deprecated ",(0,s.jsx)(i.code,{children:'"asset:prop:type": "data.core.digitalTwinRegistry"'})," entry."]}),"\n",(0,s.jsx)(i.p,{children:"As the Digital Twin Registry is an Enablement Service that is shared across use-cases, it SHOULD be offered via a set\nof policies agnostic to the FrameworkCredentials of a participant."}),"\n",(0,s.jsx)(i.h4,{id:"315-error-handling",children:"3.1.5 Error Handling"}),"\n",(0,s.jsxs)(i.p,{children:["Error response ",(0,s.jsx)(i.strong,{children:"501 Not Implemented"})," MUST be used for operations or parameter values\nnot yet supported."]}),"\n",(0,s.jsxs)(i.p,{children:["For other error codes and error handling see ",(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"#61-normative-references",children:"Specification of the Asset Administration Shell -\nPart 2: Application Programming Interfaces"})}),"."]}),"\n",(0,s.jsx)(i.h2,{id:"4-submodel-api-for-data-providers-normative",children:"4. Submodel API for Data Providers [NORMATIVE]"}),"\n",(0,s.jsx)(i.h3,{id:"41-api-specification",children:"4.1 API Specification"}),"\n",(0,s.jsx)(i.h4,{id:"411-standards-and-profiles",children:"4.1.1 Standards and Profiles"}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.a,{href:"#61-normative-references",children:"Specification of the Asset Administration Shell - Part 2:\nApplication Programming Interfaces"}),"\nis the basis for exchanging data via Digital Twins in Catena-X."]}),"\n",(0,s.jsxs)(i.p,{children:["The API is offered as OpenAPI file in addition to its formal specification published on ",(0,s.jsx)(i.a,{href:"https://industrialdigitaltwin.org/",children:"https://industrialdigitaltwin.org/"}),"."]}),"\n",(0,s.jsxs)(i.p,{children:["For relevant profiles of the Service Specifications see chapters on ",(0,s.jsx)(i.em,{children:(0,s.jsx)(i.a,{href:"#412-api-endpoints--resources",children:"API endpoints & resources"})}),"."]}),"\n",(0,s.jsxs)(i.p,{children:["API paths SHOULD be versioned only holding the major version of the AAS specification, for instance ",(0,s.jsx)(i.code,{children:"/v3/"}),"."]}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:["Note: However, the version segment of the API-endpoint will usually be hidden by a Proxy (for example an EDC Data Plane) that obfuscates the base-URL while allowing restricted client-side navigation along the path-structure defined by the AAS specification. For instance, a consumer can assume that when accessing data from a single registered Submodel, adding the path-element ",(0,s.jsx)(i.code,{children:"$value"})," will reliably yield a response containing the value-only serialization of a Submodel."]}),"\n"]}),"\n",(0,s.jsx)(i.h4,{id:"412-api-endpoints--resources",children:"4.1.2 API Endpoints & resources"}),"\n",(0,s.jsxs)(i.p,{children:["A Submodel that provides data MUST be implemented in conformance to the API-definition of\n",(0,s.jsx)(i.a,{href:"https://app.swaggerhub.com/apis/Plattform_i40/SubmodelServiceSpecification/V3.0_SSP-003",children:"Submodel Service Specification V3.0 VALUE ONLY Profile SSP-003"}),"\nof the Submodel Service Specification."]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"NOTE"}),"\nThe logical operation ",(0,s.jsx)(i.em,{children:"GetSubmodel"})," can be implemented in different ways. The only relevant\ninformation for the data consumer is the endpoint information in the Digital Twin Registry.\nBesides its availability in the Submodel Service Specification the ",(0,s.jsx)(i.em,{children:"GetSubmodelById"})," operation is\nfunctionally equivalent if the full path is given. It is available in\nthe Asset Administration Shell Service Specification as well as the Submodel Repository Service\nSpecification or Asset Administration Shell Repository Service Specification via superpaths."]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.p,{children:"The following additional restrictions apply:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["The ",(0,s.jsx)(i.code,{children:"semanticId"})," of a referred Submodel MUST also be added to the Submodel Descriptor registered for the DT (",(0,s.jsx)(i.em,{children:"SubmodelDescriptor/semanticId"}),").","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["A data provider MUST use the unique identifier of the Aspect Model standardized in Catena-X conformant to standard CX-0003 when registering\na corresponding new Aspect to a Digital Twin (",(0,s.jsx)(i.em,{children:"Submodel/semanticId"}),")."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["The ",(0,s.jsx)(i.code,{children:"subprotocol"}),' MUST be set to "DSP" (',(0,s.jsx)(i.em,{children:"SubmodelDescriptor/endpoints/protocolInformation/subprotocol"}),")."]}),"\n",(0,s.jsxs)(i.li,{children:["The ",(0,s.jsx)(i.code,{children:"subprotocolBody"}),' must be set according to the concatenation of the following key-value-pairs (assigned by a "=" and separated by a semicolon ";"):',"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"id"})," represents the id of that dcat",":DataSet"," in the Data Providers catalog that contains the Submodel."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"dspEndpoint"})," represents the endpoint of the Data Provider's Control Plane where the catalog containing the relevant dcat",":DataSet"," is located."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["The ",(0,s.jsx)(i.code,{children:"href"})," property (",(0,s.jsx)(i.em,{children:"SubmodelDescriptor/endpoints/protocolInformation/href"}),") MUST be set to the concatenation of the relevant Data Plane endpoint concatenated with the relative path to the resource's endpoint that exposes the logical operation ",(0,s.jsx)(i.code,{children:"GetSubmodel"})," or ",(0,s.jsx)(i.code,{children:"GetSubmodelById"}),", respectively. A Data Consumer is allowed to attempt swapping the Data Plane endpoint if the Data Provider has signalled that it differs from the ",(0,s.jsx)(i.code,{children:"href"}),". This may be signalled via the access token returned from the transfer process."]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"A full example satisfying these restrictions is at the end of this chapter."}),"\n",(0,s.jsx)(i.p,{children:"Beside Aspect Models standardized in Catena-X also other Aspects may be registered, either\nconformant to proprietary standards or standards from other organizations.\nHowever, these Aspects are not fit to be used in Catena-X use cases or standards.\nIn either case, an Aspect Model conformant to standard CX-0003 SHOULD be made available for these Aspects."}),"\n",(0,s.jsxs)(i.p,{children:["The following deviations are allowed, ",(0,s.jsx)(i.em,{children:"i.e."}),", the following API operations and operation parameters\nSHOULD be supported but these are not mandatory to be implemented."]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["provision of API ",(0,s.jsx)(i.strong,{children:"/description"})]}),"\n",(0,s.jsxs)(i.li,{children:["support of API operation ",(0,s.jsx)(i.strong,{children:"/submodel"})," (",(0,s.jsx)(i.em,{children:"i.e."}),', logical interface operation "GetSubmodel with\nlogical parameter "Content"="Normal", the API operation ',(0,s.jsx)(i.strong,{children:"/submodel/$value"})," extending the\ndefault operation's URL with the parameter ",(0,s.jsx)(i.strong,{children:"/submodel/$value"})," remains mandatory)"]}),"\n",(0,s.jsxs)(i.li,{children:["support of API operation ",(0,s.jsx)(i.strong,{children:"/submodel/submodel-elements/< IdShortPath >/invoke"})," and\n",(0,s.jsx)(i.strong,{children:"/submodel/submodel-elements/< IdShortPath > /invoke/$value"})]}),"\n",(0,s.jsxs)(i.li,{children:["support of query parameter ",(0,s.jsx)(i.strong,{children:"Extent=WithoutBLOBValue"})]}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"NOTE"}),"\nfor Profile SSP-003 of the Submodel Service Specification the following parameters are not included:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["no provision of API ",(0,s.jsx)(i.strong,{children:"/serialization"})]}),"\n",(0,s.jsxs)(i.li,{children:["no support of logical parameter ",(0,s.jsx)(i.strong,{children:"Content=Metadata"}),", ",(0,s.jsx)(i.em,{children:"i.e."}),', no support of API operation with path\nparameter "$metamodel" ',(0,s.jsx)(i.strong,{children:"/submodel$metamodel"})]}),"\n",(0,s.jsxs)(i.li,{children:["no support of logical parameter ",(0,s.jsx)(i.strong,{children:"Content=Reference"}),", ",(0,s.jsx)(i.em,{children:"i.e."}),', no support of API operation with\npath parameter "$reference"  ',(0,s.jsx)(i.strong,{children:"/submodel/$reference"})]}),"\n",(0,s.jsxs)(i.li,{children:["no support of logical parameter ",(0,s.jsx)(i.strong,{children:"Content=Path"}),", ",(0,s.jsx)(i.em,{children:"i.e."}),', no support of API operation with path\nparameter "$path"  ',(0,s.jsx)(i.strong,{children:"/submodel/$path"})]}),"\n",(0,s.jsxs)(i.li,{children:["no support of query parameter ",(0,s.jsx)(i.strong,{children:"Level=Core"})," (only of ",(0,s.jsx)(i.strong,{children:"Level=Deep"}),")"]}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.p,{children:"EXAMPLE for a Submodel descriptor in the DTR accessible via a DSP-compliant connector, separated in control plane and\nData Plane:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-json",children:'{\n  "id": "<unique ID of Submodel>",\n  "semanticId": {\n    "type": "ExternalReference",\n    "keys": [\n      {\n        "type": "GlobalReference",\n        "value": "urn:bamm:io.catenax.material_for_recycling:1.1.0#MaterialForRecycling"\n      }\n    ]\n  },\n  "endpoints": [\n    {\n      "protocolInformation": {\n        "href": "https://edc.data.plane/<path>/submodel",\n        "endpointProtocol": "HTTP",\n        "endpointProtocolVersion": [\n          "1.1"\n        ],\n        "subprotocol": "DSP",\n        "subprotocolBody": "id=123;dspEndpoint=https://edc.control.plane/",\n        "subprotocolBodyEncoding": "plain",\n        "securityAttributes": [\n          {\n            "type": "NONE",\n            "key": "NONE",\n            "value": "NONE"\n          }\n        ]\n      },\n      "interface": "SUBMODEL-3.0"\n    }\n  ]\n}\n\n'})}),"\n",(0,s.jsxs)(i.p,{children:['The endpoint within the SubmodelDescriptor MUST not contain the path suffix for the logical parameter "Content" like in ',(0,s.jsx)(i.em,{children:"/submodel/$value"}),". The data consumer will add the needed path suffix explicitly to the endpoint before calling the value-only Submodel operation."]}),"\n",(0,s.jsx)(i.h4,{id:"413-available-data-types",children:"4.1.3 Available Data Types"}),"\n",(0,s.jsx)(i.p,{children:"The API MUST use JSON as payload transported via HTTP."}),"\n",(0,s.jsx)(i.h4,{id:"414-representation-in-dsp-catalogs",children:"4.1.4 Representation in DSP catalogs"}),"\n",(0,s.jsx)(i.p,{children:"Access to the Submodels of a Digital Twin MUST take into account restrictions set by policies defined for them at the\nconnector to the Dataspace (see standard CX-0018)."}),"\n",(0,s.jsxs)(i.p,{children:["The data provider MAY cluster several Submodels into one ",(0,s.jsx)(i.code,{children:"dcat:Dataset"}),"."]}),"\n",(0,s.jsxs)(i.p,{children:["If a single Submodel is registered as a single ",(0,s.jsx)(i.code,{children:"dcat:Dataset"}),", its MUST be registered with the following restrictions on\nvalues for given properties."]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:'"dct:type": {"@id":"https://w3id.org/catenax/taxonomy#Submodel"}'}),'. The "dct" prefix MUST resolve to "',(0,s.jsx)(i.a,{href:"http://purl.org/dc/terms/",children:"http://purl.org/dc/terms/"}),'".']}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:'"cx-common:version"'}),'. The "cx-common" prefix MUST resolve to "',(0,s.jsx)(i.a,{href:"https://w3id.org/catenax/ontology/common#",children:"https://w3id.org/catenax/ontology/common#"}),'". The value\nMUST indicate the major and minor version of the implemented AAS-specification and must be at least ',(0,s.jsx)(i.code,{children:'"3.0"'}),"."]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["In that case, Data Providers SHOULD also add a property ",(0,s.jsx)(i.code,{children:"aas-semantics:semanticId"}),' that is set to the composite semanticId of the Submodel that the Asset represents. The "aas-semantics" prefix MUST resolve to "',(0,s.jsx)(i.a,{href:"https://admin-shell.io/aas/3/0/HasSemantics/",children:"https://admin-shell.io/aas/3/0/HasSemantics/"}),'".']}),"\n",(0,s.jsxs)(i.p,{children:["For more details on conventions in ",(0,s.jsx)(i.code,{children:"dcat:Catalog"}),"s, see CX-0018."]}),"\n",(0,s.jsx)(i.h4,{id:"415-error-handling",children:"4.1.5 Error Handling"}),"\n",(0,s.jsxs)(i.p,{children:["Error response ",(0,s.jsx)(i.strong,{children:"501 Not Implemented"})," MUST be used for API operations and parameter values\nnot yet supported."]}),"\n",(0,s.jsxs)(i.p,{children:["For error handling see\n",(0,s.jsx)(i.a,{href:"#61-normative-references",children:"Specification of the Asset Administration Shell - Part 2: Application Programming Interfaces"}),"."]}),"\n",(0,s.jsx)(i.h2,{id:"5-submodel-api-for-data-consumers-normative",children:"5. Submodel API for Data Consumers [NORMATIVE]"}),"\n",(0,s.jsxs)(i.p,{children:["The specification\n",(0,s.jsx)(i.a,{href:"#61-normative-references",children:"Specification of the Asset Administration Shell - Part 2: Application Programming Interfaces"}),"\nis the basis for consuming data via Digital Twins in Catena-X."]}),"\n",(0,s.jsxs)(i.p,{children:["The API is offered as OpenAPI file in addition to its formal specification published on ",(0,s.jsx)(i.a,{href:"https://industrialdigitaltwin.org/",children:"https://industrialdigitaltwin.org/"}),"."]}),"\n",(0,s.jsx)(i.p,{children:"This is the relevant service specification profile for data consumers:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://app.swaggerhub.com/apis/Plattform_i40/SubmodelServiceSpecification/V3.0_SSP-003",children:"Submodel Service Specification V3.0 READ Profile SSP-003"})}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The READ API operations of the Asset Administration Shell profile SSP-003 of the Submodel Service\nSpecification MAY be used to access the Submodels provided by data providers."}),"\n",(0,s.jsxs)(i.p,{children:['The logical parameter "Content" is realized via path suffixes (starting with ',(0,s.jsx)(i.code,{children:"$"}),") like in ",(0,s.jsx)(i.code,{children:"/submodel/$value"}),'. The endpoint within the Digital Twin Registry is not including the path suffixes. This is why the path suffix needs to be explicitly added to the endpoint before calling the value-only Submodel operation, ensuring type-safety for the response object. A logical parameter like "Level" is realized as query parameter.']}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"NOTE"}),"\nThe logical ",(0,s.jsx)(i.em,{children:"GetSubmodel"})," operation is not called explicitly by the data consumer. Instead, the\nendpoint as provided via the Digital Twin Registry for the asset and ",(0,s.jsx)(i.em,{children:"Submodel"})," of interest is\ncalled with GET.\nAdditionally, the data consumer MAY need to set parameters before calling the API operation."]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"6-references",children:"6. References"}),"\n",(0,s.jsx)(i.h3,{id:"61-normative-references",children:"6.1 Normative References"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:["Specification of the Asset Administration Shell - Part 1: Metamodel. V3.0, April\n2023, IDTA number: 01001-3-0 On ",(0,s.jsx)(i.a,{href:"https://industrialdigitaltwin.org/content-hub",children:"IDTA Content Hub"})]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:["Specification of the Asset Administration Shell - Part 2: Application Programming\nInterfaces. V3.0, April 2023, IDTA number: 01002-03-1 On ",(0,s.jsx)(i.a,{href:"https://industrialdigitaltwin.org/content-hub",children:"IDTA Content Hub"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"62-non-normative-references",children:"6.2 Non-Normative References"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.em,{children:"This section is non-normative"})}),"\n"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://industrialdigitaltwin.org/wp-content/uploads/2022/12/2022-12-07_IDTA_AAS-Reading-Guide.pdf",children:"Asset Administration Shell Reading Guide"})}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:["CX-0003 SEMANTIC ASPECT META MODEL v1.1.0. In ",(0,s.jsx)(i.a,{href:"https://catena-x.net/de/standard-library",children:"Catena-X Standard Library"})]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:["CX-0018 DATASPACE CONNECTIVITY v3.0.0. In ",(0,s.jsx)(i.a,{href:"https://catena-x.net/de/standard-library",children:"Catena-X Standard Library"})]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:["CX-0001 EDC DISCOVERY API v1.0.2. In ",(0,s.jsx)(i.a,{href:"https://catena-x.net/de/standard-library",children:"Catena-X Standard Library"})]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:["CX-0053 BPN Discovery Service APIs v1.0.1. In ",(0,s.jsx)(i.a,{href:"https://catena-x.net/de/standard-library",children:"Catena-X Standard Library"})]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:["CX-0044 ECLASS v1.0.2.  In ",(0,s.jsx)(i.a,{href:"https://catena-x.net/de/standard-library",children:"Catena-X Standard Library"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"63-reference-implementations",children:"6.3 Reference Implementations"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.em,{children:"This section is non-normative"})}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The following open-source project implements a Digital Twin Registry\nsolution conformant to this standard:"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://github.com/eclipse-tractusx/sldt-digital-twin-registry",children:"https://github.com/eclipse-tractusx/sldt-digital-twin-registry"})}),"\n",(0,s.jsx)(i.h2,{id:"annexes",children:"ANNEXES"}),"\n",(0,s.jsx)(i.h3,{id:"figures",children:"FIGURES"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.em,{children:"This section is non-normative"})}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:'Terminology - "Non-normative overview of relations between terms relevant\nin CX - 0002"'}),"\n",(0,s.jsx)(i.h3,{id:"tables",children:"TABLES"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.em,{children:"This section is non-normative"})}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"legal",children:"Legal"}),"\n",(0,s.jsxs)(i.p,{children:["Copyright \xa9 2025 Catena-X Automotive Network e.V. All rights reserved. For more information, please visit ",(0,s.jsx)(i.a,{href:"/copyright",children:"here"}),"."]})]})}function h(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},26965:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/CX-0002-picture1-f05e95f7ae095249ae4c737a6b4d2c56.jpg"},3566:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/CX-0002-picture2-00cdf0f67ace8056e6a46bad91ae8442.png"},28453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>o});var t=n(96540);const s={},a=t.createContext(s);function r(e){const i=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:i},e.children)}}}]);