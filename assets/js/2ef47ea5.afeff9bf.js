"use strict";(self.webpackChunkcatenax_ev_github_io_new=self.webpackChunkcatenax_ev_github_io_new||[]).push([[25e3],{14571:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"working-model/process-structure/process-structure","title":"Overview of Release phases a processes","description":"This chapter contextualizes the various phases of a Catena-X release within the framework of the necessary processes.","source":"@site/docs/working-model/process-structure/process-structure.md","sourceDirName":"working-model/process-structure","slug":"/working-model/process-structure/","permalink":"/docs/next/working-model/process-structure/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Overview of Release phases a processes"},"sidebar":"sidebar_working_model","previous":{"title":"Quality Gate 2 (QG2)","permalink":"/docs/next/working-model/release-management/development-and-release/quality-gate-2"},"next":{"title":"Association - General alignment","permalink":"/docs/next/working-model/process-structure/association-general"}}');var n=t(74848),a=t(28453);const o={sidebar_position:1,title:"Overview of Release phases a processes"},i=void 0,c={},l=[];function d(e){const s={a:"a",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:"This chapter contextualizes the various phases of a Catena-X release within the framework of the necessary processes."}),"\n",(0,n.jsx)(s.p,{children:"During a Catena-X release cycle, numerous roadmap items must be addressed. These items can be categorized into three primary groups:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/docs/next/working-model/process-structure/tx-from-idea-to-production",children:(0,n.jsx)(s.strong,{children:"Tractus-X"})}),": This category includes items such as KITs, Reference Implementations, API Specifications, Protocols, Sample Data, Architecture, Documentation, Deployment Scripts, and Tutorials."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/docs/next/working-model/process-structure/cx-from-idea-to-standard",children:(0,n.jsx)(s.strong,{children:"Catena-X"})}),": This category encompasses Standards (due to adaptations in Semantic Models, Logic/Schema, API Specifications, Protocols) and Whitepapers (which may result in KITs adaptations)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Organizational"}),": This category involves tasks such as setting up Expert Groups and promoting Use Cases."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"Overview",src:t(80147).A+""})}),"\n",(0,n.jsx)(s.p,{children:"All three categories share the same phases for a release:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Planning"}),": Define the scope, objectives, and deliverables of the release."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Refinement"}),": Refine and finalize the requirements and design, Prepare detailed plans for implementation and ensure readiness for the implementation phase."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Implementation"}),": Implement the roadmap items, ensure the release meets quality standards and prepare for post-release activities"]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Each category has specific processes that must be adhered to in order to contribute to a Catena-X release. Detailed requirements for each process are described on the respective process pages."})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},80147:(e,s,t)=>{t.d(s,{A:()=>r});const r=t.p+"assets/images/release-planing-next-steps-horizontal.drawio-6b413a916a0e454ef21c3103b032af64.svg"},28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>i});var r=t(96540);const n={},a=r.createContext(n);function o(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);